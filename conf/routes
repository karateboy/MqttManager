# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                                                controllers.Assets.at(path="/public/dist", file="index.html")

# Map static resources from the /public folder to the /assets URL path
GET           /static/*file                                                                    controllers.Assets.versioned(path="/public/static", file: Asset)
GET           /html/*file                                                                      controllers.Assets.at(path="/public/html", file)
GET           /dist/*file                                                                      controllers.Assets.at(path="/public/dist", file)
GET           /tt                                                                              controllers.Assets.at(path="/public/tt", file="index.html")
GET           /tt/*file                                                                        controllers.Assets.at(path="/public/tt", file)


GET           /logout                                                                          controllers.Login.logout
POST          /login                                                                           controllers.Login.authenticate
GET           /login                                                                           controllers.Login.isLogin

POST          /User                                                                            controllers.HomeController.newUser
GET           /User                                                                            controllers.HomeController.getAllUsers
PUT           /User/:id                                                                        controllers.HomeController.updateUser(id)
DELETE        /User/:id                                                                        controllers.HomeController.deleteUser(id)

POST          /Group                                                                           controllers.HomeController.newGroup
GET           /Group                                                                           controllers.HomeController.getMyGroup
GET           /Groups                                                                          controllers.HomeController.getAllGroups
PUT           /Group/:id                                                                       controllers.HomeController.updateGroup(id)
DELETE        /Group/:id                                                                       controllers.HomeController.deleteGroup(id)

GET           /RealtimeStatus                                                                  controllers.Query.realtimeStatus()
GET           /RealtimeSummary                                                                 controllers.Realtime.realtimeSummary()

GET           /HistoryTrend/:monitor/:monitorType/:reportUnit/:statusFilter/:start/:end        controllers.Query.historyTrendChart(monitor, monitorType, reportUnit, statusFilter, start:Long, end:Long, outputTypeStr="html")
GET           /HistoryReport/:monitor/:monitorType/:tabType/:start/:end                        controllers.Query.historyData(monitor, monitorType, tabType, start: Long, end: Long)
GET           /LatestData/:monitor/:monitorType/:tabType                                       controllers.Query.latestData(monitor, monitorType, tabType)

GET           /QueryData/:groupId/:monitorType/:tabType/:start/:end                            controllers.Query.queryData(groupId, monitorType, tabType, start: Long, end: Long)

GET           /CalibrationReport/:start/:end                                                   controllers.Query.calibrationReport(start:Long, end:Long)

GET           /AlarmReport/:level/:start/:end                                                  controllers.Query.alarmReport(level:Int, start:Long, end:Long)
GET           /ErrorReport/:start/:end                                                         controllers.Query.getErrorReports(start:Long, end:Long)

GET           /InstrumentTypes                                                                 controllers.HomeController.getInstrumentTypes
GET           /InstrumentType/:id                                                              controllers.HomeController.getInstrumentType(id)


GET           /InstrumentInfos                                                                 controllers.HomeController.getInstrumentInfoList()
POST          /Instrument                                                                      controllers.HomeController.newInstrument
GET           /Instruments                                                                     controllers.HomeController.getInstrumentList
GET           /Instruments/DO                                                                  controllers.HomeController.getDoInstrumentList
GET           /Instrument/:id                                                                  controllers.HomeController.getInstrument(id)
DELETE        /Instrument/:ids                                                                 controllers.HomeController.removeInstrument(ids)
GET           /MyGroupDoInstrument                                                             controllers.HomeController.getMyDoInstrumentList


PUT           /DeactivateInstrument/:ids                                                       controllers.HomeController.deactivateInstrument(ids)
PUT           /ActivateInstrument/:ids                                                         controllers.HomeController.activateInstrument(ids)
PUT           /ToggleMaintainInstrument/:ids                                                   controllers.HomeController.toggleMaintainInstrument(ids)
PUT           /CalibrateInstrumentZero/:ids                                                    controllers.HomeController.calibrateInstrument(ids, zeroCalibration="true")
PUT           /CalibrateInstrumentSpan/:ids                                                    controllers.HomeController.calibrateInstrument(ids, zeroCalibration="false")
PUT           /CalibrateInstrument/:ids                                                        controllers.HomeController.calibrateInstrumentFull(ids)
PUT           /ResetInstrument/:ids                                                            controllers.HomeController.resetInstrument(ids)
PUT           /WriteDO/:ids                                                                    controllers.HomeController.writeDO(ids)
GET           /ExecuteSeq/:ids/:seq                                                            controllers.HomeController.getExecuteSeq(ids, seq:Int)
PUT           /ExecuteSeq/:ids/:seq                                                            controllers.HomeController.executeSeq(ids, seq:Int)


GET           /InstrumentStatusReport/:id/:start/:end                                          controllers.Query.instrumentStatusReport(id, start:Long, end:Long)
GET           /ManualAuditHistory/:start/:end                                                  controllers.Query.manualAuditHistoryReport(start:Long, end:Long)

GET           /Sensors                                                                         controllers.HomeController.getSensors
POST          /Sensor/:id                                                                      controllers.HomeController.upsertSensor(id)
PUT           /Sensor/:id                                                                      controllers.HomeController.upsertSensor(id)
DELETE        /Sensor/:id                                                                      controllers.HomeController.deleteSensor(id)

#Data Management

GET           /Recalculate/:monitors/:start/:end                                               controllers.HomeController.recalculateHour(monitors, start:Long, end:Long)

#Realtime
GET           /MonitorTypeStatusList                                                           controllers.Realtime.MonitorTypeStatusList()

#Report
GET           /monitorReport/:reportType/:reportDate                                           controllers.Report.getMonitorReport(reportType, reportDate:Long, outputTypeStr="html")
GET           /PDF/monitorReport/:reportType/:reportDate                                       controllers.Report.getMonitorReport(reportType, reportDate:Long, outputTypeStr="pdf")
GET           /Excel/monitorReport/:reportType/:reportDate                                     controllers.Report.getMonitorReport(reportType, reportDate:Long, outputTypeStr="excel")

GET           /MonthlyHourReport/:monitorType/:reportDate                                      controllers.Report.monthlyHourReport(monitorType, reportDate:Long, outputTypeStr="html")

#Upload
POST          /ImportData/:fileType                                                            controllers.HomeController.importData(fileType)
GET           /UploadProgress/:actorName                                                       controllers.HomeController.getUploadProgress(actorName)

#JSON
GET           /MonitorType                                                                     controllers.HomeController.monitorTypeList
POST          /MonitorType/:id                                                                 controllers.HomeController.upsertMonitorType(id)
PUT           /MonitorType/:id                                                                 controllers.HomeController.upsertMonitorType(id)
GET           /SignalTypes                                                                     controllers.HomeController.signalTypeList
GET           /SignalValues                                                                    controllers.HomeController.signalValues
GET           /DoInstrumentInfoList                                                            controllers.HomeController.getSignalInstrumentList

GET           /Monitors                                                                        controllers.HomeController.monitorList
PUT           /Monitor/:id                                                                     controllers.HomeController.upsertMonitor(id)
DELETE        /Monitor/:id                                                                     controllers.HomeController.deleteMonitor(id)


GET           /Record/:monitorType/:start/:end                                                 controllers.Query.recordList(monitorType, start:Long, end:Long)
PUT           /Record/:tabType                                                                 controllers.Query.updateRecord(tabType)

GET           /HourRecord/:start/:end                                                          controllers.Query.hourRecordList(start:Long, end:Long)
GET           /MinRecord/:start/:end                                                           controllers.Query.minRecordList(start:Long, end:Long)
GET           /CalibrationRecord/:start/end                                                    controllers.Query.calibrationRecordList(start:Long, end:Long)
GET           /AlertRecord/:start/end                                                          controllers.Query.alertRecordList(start:Long, end:Long)
	

GET           /TestSpray                                                                       controllers.HomeController.testSpray
GET           /TestAlertEmail/:userID                                                          controllers.HomeController.testAlertEmail(userID)
GET           /TestLINE/:token                                                                 controllers.HomeController.testLINE(token)

GET           /Image/:id                                                                       controllers.Camera.getImage(id)
#GET		/WindRose				controllers.Query.windRose
#GET		/MonitorTypeRose		controllers.Query.monitorTypeRose
#GET		/WindRoseReport/:monitor/:monitorType/:nWays/:start/:end	controllers.Query.windRoseReport(monitor, monitorType, nWays:Int, start, end)
